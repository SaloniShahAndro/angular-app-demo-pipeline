AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Serverless website

Resources:
  CloudfrontDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        Origins:
          - DomainName: !GetAtt S3Bucket.DomainName
            ## An identifier for the origin which must be unique within the distribution
            Id: mys3WebApp
            CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginProtocolPolicy: https-only
            ## In case you want to restrict the bucket access use S3OriginConfig and remove CustomOriginConfig
            # S3OriginConfig:
            #   OriginAccessIdentity: origin-access-identity/cloudfront/E127EXAMPLE51Z
        Enabled: 'true'
        ## Uncomment the following section in case you are using a custom domain
        # Aliases:
        # - mysite.example.com
        DefaultRootObject: dist/Apps/index.html
        ## Since the Single Page App is taking care of the routing we need to make sure ever path is served with index.html
        ## The only exception are files that actually exist e.h. app.js, reset.css
        CustomErrorResponses:
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
        DefaultCacheBehavior:
          AllowedMethods:
            - DELETE
            - GET
            - HEAD
            - OPTIONS
            - PATCH
            - POST
            - PUT
          ## The origin id defined above
          TargetOriginId: mys3WebApp
          ## Defining if and how the QueryString and Cookies are forwarded to the origin which in this case is S3
          ForwardedValues:
            QueryString: 'false'
            Cookies:
              Forward: none
          ## The protocol that users can use to access the files in the origin. To allow HTTP use `allow-all`
          ViewerProtocolPolicy: redirect-to-https
        ## The certificate to use when viewers use HTTPS to request objects.
        ViewerCertificate:
          CloudFrontDefaultCertificate: 'true'

  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      # Change bucket name to reflect your website
      BucketName: 'mys3bucketangular270993-sam'
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html

  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        !Ref S3Bucket
      PolicyDocument:
        Statement:
          - Sid: PublicReadGetObject
            Effect: Allow
            Principal: "*"
            Action:
            - s3:*
            Resource: 
            - !Sub "arn:aws:s3:::${S3Bucket}/*"